// Mocks generated by Mockito 5.0.17 from annotations
// in market_libre/test/feature/home/cubit/search_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:market_libre/core/db/isar_db.dart' as _i6;
import 'package:market_libre/features/home/data/api/search_api.dart' as _i3;
import 'package:market_libre/features/home/data/models/search_dto.dart' as _i5;
import 'package:market_libre/features/home/domain/models/search_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSearchResultEntity_0 extends _i1.Fake
    implements _i2.SearchResultEntity {}

/// A class which mocks [SearchApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchApi extends _i1.Mock implements _i3.SearchApi {
  MockSearchApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.SearchDto> search(String? query, int? limit, int? offset) =>
      (super.noSuchMethod(Invocation.method(#search, [query, limit, offset]),
              returnValue: Stream<_i5.SearchDto>.empty())
          as _i4.Stream<_i5.SearchDto>);
}

/// A class which mocks [IsarDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsarDb extends _i1.Mock implements _i6.IsarDb {
  MockIsarDb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.SearchResultEntity> saveResult(
          _i2.SearchResultEntity? result) =>
      (super.noSuchMethod(Invocation.method(#saveResult, [result]),
              returnValue: Future<_i2.SearchResultEntity>.value(
                  _FakeSearchResultEntity_0()))
          as _i4.Future<_i2.SearchResultEntity>);
  @override
  _i4.Future<List<_i2.SearchResultEntity>> getResult() =>
      (super.noSuchMethod(Invocation.method(#getResult, []),
              returnValue: Future<List<_i2.SearchResultEntity>>.value(
                  <_i2.SearchResultEntity>[]))
          as _i4.Future<List<_i2.SearchResultEntity>>);
  @override
  _i4.Future<bool> delete(int? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
